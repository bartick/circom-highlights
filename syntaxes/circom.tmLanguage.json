{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Circom",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"include": "#reserved-keywords"
		},
		{
			"include": "#variable-declaration"
		},
		{
			"include": "#methods"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#operators"
		},
		{
			"include": "#brackets"
		},
		{
			"include": "#identifiers"
		}
	],
	"repository": {
		"comments": {
			"patterns": [{
				"name": "comment.line.single-line.circom",
				"match": "//.*$"
			}, {
				"name": "comment.block.circom",
				"begin": "/\\*",
				"end": "\\*/"
			}]
		},
		"reserved-keywords": {
			"patterns": [{
				"name": "keyword.control.circom",
				"match": "\\b(signal|template|component|function|return|if|else|for|while|do|assert|include|parallel|pragma circom|pragma custom_templates)"
			}]
		},
		"variable-declaration": {
			"patterns": [{
				"name": "storage.type.circom",
				"match": "\\b(var|input|output|public|log)"
			}]
		},
		"strings": {
			"patterns": [{
				"name": "string.quoted.double.circom",
				"begin": "\"",
				"end": "\"",
				"patterns": [{
					"name": "constant.character.escape.circom",
					"match": "\\\\."
				}]
			}]
		},
		"numbers": {
			"patterns": [{
				"name": "constant.numeric.circom",
				"match": "\\b(0x[0-9a-fA-F]+|\\d+)"
			}]
		},
		"operators": {
			"patterns": [{
				"name": "keyword.operator.circom",
				"match": "\\+|\\-|\\*|\\/|\\%|\\^|\\&|\\||\\~|\\!|\\=|\\<|\\>|\\?|\\:|\\,|\\;|\\."
			}]
		},
		"brackets": {
			"patterns": [{
				"name": "punctuation.definition.bracket.round.circom",
				"match": "\\(|\\)"
			}, {
				"name": "punctuation.definition.bracket.square.circom",
				"match": "\\[|\\]"
			}, {
				"name": "punctuation.definition.bracket.curly.circom",
				"match": "\\{|\\}"
			}]
		},
		"identifiers": {
			"patterns": [{
				"name": "variable.other.circom",
				"match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
			}]
		},
		"methods": {
			"patterns": [{
				"name": "support.function.circom",
				"match": "\\b(\\w+)(?=\\()"
			}]
		}
	},
	"scopeName": "source.circom"
}